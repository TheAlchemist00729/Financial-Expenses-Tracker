//This tests importing and cleanup of data
const request = require('supertest');
const app = require('../server');
const db = require('../db');

afterAll(async () => {
  await db.query('DELETE FROM users WHERE username = $1', ['newuser']);
  await db.pool.end();
});


//This tests POST signup of a new user
describe('Users API', () => {
  test('POST /api/users/signup  creates a new account', async () => {
    const res = await request(app)
      .post('/api/users/signup')
      .send({ username: 'newuser', password: 'SecurePass1' });

    expect(res.statusCode).toBe(200);
    expect(res.body).toHaveProperty('token');
    expect(res.body.user.username).toBe('newuser');
  });


//This tests POST signup of a weak password
  test('POST /api/users/signup  rejects weak password', async () => {
    const res = await request(app)
      .post('/api/users/signup')
      .send({ username: 'weakuser', password: '123' });

    expect(res.statusCode).toBe(400);
    expect(res.body.error).toMatch(/Password too weak/);
  });


//This tests POST signup of a duplicate username
  test('POST /api/users/signup  rejects duplicate username', async () => {

await request(app)
      .post('/api/users/signup')
      .send({ username: 'dupuser', password: 'Password123' });

      const res = await request(app)
      .post('/api/users/signup')
      .send({ username: 'dupuser', password: 'AnotherPass1' });

       expect(res.statusCode).toBe(409);
    expect(res.body.error).toMatch(/Username already taken/);
  });
});


